@using System.Web.Optimization
@using System.Configuration
@using Keystone.Web.Models
@using Keystone.Web.Utilities
@model TemplatePageModel
@{
    int? selectedTemplateId = Convert.ToInt32(ViewBag.SelectedTemplateId.ToString());
}
@section PageStyle{
    @Styles.Render("~/Styles/Editor")

    <style type="text/css">
        .three_part {
            margin-right: 0;
        }
    </style>
}
@section PageScript{
    @if (selectedTemplateId.HasValue)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                sessionStorage.setItem('SELECTED_TEMPLATE_ID', parseInt('@selectedTemplateId.Value.ToString()'));

                $('#worning').flash();
            });
        </script>
    }
    @if (ViewContext.HttpContext.Request.Url.AbsoluteUri.Contains("SavedImageIndex") &&
        selectedTemplateId.HasValue)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                sessionStorage.setItem('SELECTED_TEMPLATE_DELIVERY_{0}'.format('@selectedTemplateId.Value.ToString()'), parseInt('@ViewBag.DeliveryId'));
                sessionStorage.setItem('SELECTED_TEMPLATE_QUANTITY_{0}'.format('@selectedTemplateId.Value.ToString()'), parseInt('@ViewBag.Quantity'));
                sessionStorage.setItem('SELECTED_TEMPLATE_PRICE_{0}'.format('@selectedTemplateId.Value.ToString()'), parseInt('@ViewBag.Price'));
            });
        </script>
    }
    @Scripts.Render("~/Scripts/Fabric")

    <script type="text/javascript">
        (function ($, win) {
            this.PickTemplate = function () {
                try {
                    var templateId = sessionStorage.getItem('SELECTED_TEMPLATE_ID');
                    win.location.href = '{0}/PriceSummary/SelectedIndex?templateid={1}'.format(virtualDirectory, templateId);
                } catch (ex) {
                    console.log(ex);
                }
            };

            $(document).on('change', '#Quantity, input[name="DeliveryScheduleId"]', function () {
                try {
                    var templateId = sessionStorage.getItem('SELECTED_TEMPLATE_ID');
                    var quantity = $('#Quantity option:selected').val();
                    var deliveryId = $('input[name="DeliveryScheduleId"]:checked').val();
                    GetTemplatePrice(templateId, deliveryId, quantity, $('.rate_oftotal'));
                } catch (ex) {
                    console.log(ex);
                }
            });

        }(jQuery, window));
    </script>
}
<div class="body_part_inner">
    @Html.Partial("_NavBar")
    <div class="print_total">
        <div class="head_print">
            <div class="left_text_print" style="width:28%">
                <p style="margin-bottom: 7px;"><strong>@Model.Template.TemplateTitle.ToString()</strong></p>
                <br />
                <p class="other">
                    <strong>
                        @string.Format("{0:0.0}\" - {1:0}\"",
                            Model.Template.TemplateWidth, Model.Template.TemplateHeight)
                    </strong>
                </p>
            </div>
            <div class="front_backbtn">
                @Html.Partial("_TemplatePageNavigator", (IEnumerable<TemplatePageModel>)ViewBag.Pages,
                    new ViewDataDictionary { { "DraftId", (object)(ViewBag.DraftId ?? 0) } })
            </div>
            <div class="preview">
                <a href="javascript:void(0);" onclick="CreatedPreviewOfAllPageForATemplate('@Url.Action("GetProceedToCart", "Editor")', @Model.TemplateId.ToString(), @Model.TemplatePageId.ToString(), ModalCallbackForPreview);" class="color_3 big-link">
                    <input type="button" class="preview_btn" value="Preview" />
                </a>
            </div>
        </div>

        @Html.Partial("_RibbonToolbar", new ViewDataDictionary {
            {"TemplateId",Model.TemplateId},
            {"TemplatePageId",Model.TemplatePageId}
        })

        @Html.Partial("_StatusNavigation", new ViewDataDictionary { { "Page", "Editor" }, { "TemplateId", Model.TemplateId }, { "TemplatePageId", Model.TemplatePageId } })

        <div class="edit-zone">
            <canvas id="canvas" class="main-canvas" width="@Model.PageWidth" height="@Model.PageHeight"></canvas>

            @Html.Hidden("TemplatePageUrl", Url.Content(string.Format
                ("~/Templates/{0}/{1}", Model.Template.TemplateId, Model.TemplatePageUrl)))

            @Html.HiddenFor(x => x.PageWidth)
            @Html.HiddenFor(x => x.PageHeight)
            @Html.HiddenFor(x => x.TemplateId)
            @Html.HiddenFor(x => x.TemplatePageId)
            @Html.HiddenFor(x => x.TemplatePageJson)
        </div>
    </div>
    @if (ViewBag.PageId != null)
    {
        @Html.Hidden("pageid", (object)ViewBag.PageId)
    }
    @Html.Hidden("DraftId", (object)(ViewBag.DraftId ?? 0))
</div>
<div class="hove-highlighter" title="">
    <div class="hover-indicator">Click To Edit</div>
    <span class="hover-descriptor">Image size not to exceed @ConfigurationManager.AppSettings["OptimalImageWidth"].ToString() pixels.</span>
</div>

@using (Html.BeginForm("SetWatermark", "Editor", FormMethod.Post, new { id = "frmCanvasData" }))
{
    @Html.Hidden("imageRawData", "")
    @Html.Hidden("templateId", "")
    @Html.Hidden("pageId", "")
}

<div class="vMouse"></div>
<div class="hMouse"></div>