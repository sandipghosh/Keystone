@using Keystone.Web.Models
@model UserAccountModel

@using (Ajax.BeginForm("UpdateUser", "UserAccount", null,
    new AjaxOptions { OnSuccess = "ChangeUserPassword_OnSuccess" }, new { id = "frmChangeUserPassword" }))
{
    <div class="popup-cotainer content-wrapper">
        <div class="popup-title">Change Password</div>
        <div class="popup-content row-container">
            <div class="row-item">
                <div class="row-col-left">
                    User Id :
                </div>
                <div class="row-col-right">
                    @Html.TextBoxFor(x => x.UserId, new { @readonly = "readonly" })
                </div>
            </div>
            <div class="row-item">
                <div class="row-col-left">
                    Password :
                </div>
                <div class="row-col-right">
                    @Html.TextBoxFor(x => x.Password, new { type = "password", placeholder = "Password" })
                </div>
            </div>
            <div class="row-item">
                <div class="row-col-left">
                    Confirm Password :
                </div>
                <div class="row-col-right">
                    @Html.TextBox("ConfirmPassword", "", new { type = "password", placeholder = "Password" })
                </div>
            </div>
        </div>
        <div class="popup-navigation">
            <input type="button" class="sub" onclick="SubmitChangePassword();" value="Submit" />
        </div>
    </div>

    @Html.HiddenFor(x => x.UserAccountId)
    @Html.HiddenFor(x => x.FirstName)
    @Html.HiddenFor(x => x.LastName)
    @Html.HiddenFor(x => x.EmailId)
    @Html.HiddenFor(x => x.IsAdmin)
    @Html.HiddenFor(x => x.PrimaryContact)
    @Html.HiddenFor(x => x.StatusId)
    @Html.HiddenFor(x => x.CreatedBy)
    @Html.HiddenFor(x => x.CreatedOn)
    @Html.Hidden("PreviousPassword", Model.Password)
}
