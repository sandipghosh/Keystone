@using Keystone.Web.Models
@using Keystone.Web.Utilities
@using System.Collections.Generic
@using System.Web.Routing
@model IEnumerable<TemplatePageModel>
@{
    string currentPageIndex = string.IsNullOrEmpty
        (Convert.ToString(Request.QueryString["pageid"]))
        ? Model.FirstOrDefault().TemplatePageId.ToString()
        : Request.QueryString["pageid"].ToString();

    List<TemplatePageModel> activeTemplatePages = Model
        .Where(x => x.StatusId.Equals((int)StatusEnum.Active))
        .OrderBy(x => x.OrderIndex).ToList();
}
<div class="page-navigator-container">
    <ul class="page-navigator">
        @foreach (TemplatePageModel item in activeTemplatePages)
        {
            string navName = string.Empty;

            if (activeTemplatePages.IndexOf(item) == 0)
            { navName = "Front Page"; }
            else if (activeTemplatePages.IndexOf(item) == activeTemplatePages.Count() - 1)
            { navName = "Back Page"; }
            else
            { navName = activeTemplatePages.IndexOf(item).ToString(); }

            <li data-pageid="@item.TemplatePageId" class="page-navigator-index @(int.Parse(currentPageIndex) == item.TemplatePageId ? "selected" : "")">
                <a href='javascript:NavigatePage("@Url.Action("PageIndex", "Editor", new { pageid = item.TemplatePageId, draftId = ViewData["DraftId"].ToString() })", @item.TemplateId, @item.TemplatePageId)'>@navName</a>
            </li>
        }
    </ul>
</div>
